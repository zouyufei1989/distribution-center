<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BonusWallet">

	<sql id="tableName">d_bonus_wallet</sql>

	<select id="selectSearchList" parameterType="Map" resultType="BonusWallet">
		SELECT
			dbw.id,
			IFNULL(dc.name,dc.nick_name) AS 'customer.name',
			dc.phone AS 'customer.phone',
			dcg.serial_number AS 'customer.customerGroup.serialNumber',
			dcg.id AS 'customer.customerGroup.id',
			dcg.type AS 'customer.customerGroup.type',
			dbw.available_bonus AS availableBonus,
			dg.name AS groupName,
			dbw.last_distribution_date AS lastDistributionDate
		FROM d_bonus_wallet dbw
		LEFT JOIN d_customer_group dcg ON dcg.bonus_wallet_id = dbw.id
		LEFT JOIN d_customer dc ON dc.id = dcg.customer_id
		LEFT JOIN d_group dg ON dg.id = dcg.group_id
		WHERE
			1=1
			<if test="groupId!=null">
				AND dcg.group_id = #{groupId}
			</if>
			<if test="name!=null and name!=''">
				AND (dc.name LIKE CONCAT('%',#{name},'%') OR dc.nick_name LIKE CONCAT('%',#{name},'%'))
			</if>
			<if test="openId!=null and openId!=''">
				AND dc.open_id = #{openId}
			</if>
			<if test="serialNumber!=null and serialNumber!=''">
				AND dcg.serial_number LIKE CONCAT('%',#{serialNumber},'%')
			</if>
			<if test="phone!=null and phone!=''">
				AND dc.phone LIKE CONCAT('%',#{phone},'%')
			</if>
			<if test="search4Distribution!=null and search4Distribution==1">
				AND dbw.available_bonus &gt;0 AND dcg.type = 2
			</if>
		ORDER BY dcg.serial_number
		<if test="rows != null and  rows > 0">
			LIMIT #{start}, #{rows}
		</if>
	</select>

	<select id="selectSearchListCount" parameterType="Map" resultType="Integer">
		SELECT
			COUNT(*)
		FROM d_bonus_wallet_detail dbwd
		LEFT JOIN d_bonus_wallet dbw ON dbwd.bonus_wallet_id = dbw.id
		LEFT JOIN d_customer_group dcg ON dcg.wallet_id = dbw.id
		LEFT JOIN d_customer dc ON dc.id = dcg.customer_id
		WHERE
			1=1
			<if test="groupId!=null">
				AND dcg.group_id = #{groupId}
			</if>
			<if test="openId!=null and openId!=''">
				AND dc.open_id = #{openId}
			</if>
			<if test="name!=null and name!=''">
				AND (dc.name LIKE CONCAT('%',#{name},'%') AND dc.nick_name LIKE CONCAT('%',#{name},'%'))
			</if>
			<if test="serialNumber!=null and serialNumber!=''">
				AND dcg.serial_number LIKE CONCAT('%',#{serialNumber},'%')
			</if>
			<if test="phone!=null and phone!=''">
				AND dc.phone LIKE CONCAT('%',#{phone},'%')
			</if>
			<if test="search4Distribution!=null and search4Distribution==1">
				AND dbw.available_bonus &gt;0 AND dcg.type = 2
			</if>
	</select>


	<select id="selectSearchList4Detail" parameterType="Map" resultType="BonusWalletDetail">
		SELECT
			IFNULL(dc.name,dc.nick_name) AS 'customer.name',
			dc.phone AS 'customer.phone',
			dcg.serial_number AS 'customer.customerGroup.serialNumber',
			dcg.type AS 'customer.customerGroup.type',
			SUM(dbwd.bonus_change) AS bonusChange,
			dbwd.bonus_rate AS bonusRate,
			IF(dbwd.change_type=1, MIN(dbwd.bef_available_bonus),dbwd.bef_available_bonus) AS befAvailableBonus,
			dbwd.bef_distribute_bonus AS befDistributeBonus,
			IF(dbwd.change_type=1,MIN(dbwd.bef_sum_bonus),dbwd.bef_sum_bonus) AS befSumBonus,
			IF(dbwd.change_type=1,MAX(dbwd.aft_available_bonus),dbwd.aft_available_bonus) AS aftAvailableBonus,
			dbwd.aft_distribute_bonus AS aftDistributeBonus,
			IF(dbwd.change_type=1,MAX(dbwd.aft_sum_bonus),dbwd.aft_sum_bonus) AS aftSumBonus,
			dbwd.create_date AS createDate,
			dbwd.change_type AS changeType,
			dg.name AS groupName,
			src_customer_money_pay AS srcCustomerMoneyPay,
			src_customer_money_available AS srcCustomerMoneyAvailable,
			nu.username AS creator,
			IFNULL(srcDc.name,srcDc.nick_name) AS srcCustomerName,
			dbp.bonus_rate AS 'customer.bonusPlan.bonusRate',
			dcg.expire_date AS 'customer.customerGroup.expireDate'
		FROM d_bonus_wallet_detail dbwd
		LEFT JOIN d_bonus_wallet dbw ON dbwd.bonus_wallet_id = dbw.id
		LEFT JOIN d_customer_group dcg ON dcg.bonus_wallet_id = dbw.id
		LEFT JOIN d_customer dc ON dc.id = dcg.customer_id
		LEFT JOIN d_group dg ON dg.id = dcg.group_id
		LEFT JOIN ns_users nu ON nu.id = dbwd.creator
		LEFT JOIN d_order_pay_item dopi ON dopi.id = dbwd.order_pay_item_id
		LEFT JOIN d_order do ON do.id = dopi.order_id
		LEFT JOIN d_customer_group srcDcg ON srcDcg.id = do.customer_group_id
		LEFT JOIN d_customer srcDc ON srcDc.id = srcDcg.customer_id
		LEFT JOIN d_bonus_plan dbp ON dbp.id = dcg.bonus_plan_id
		WHERE
			1=1
			<if test="groupId!=null">
				AND dcg.group_id = #{groupId}
			</if>
			<if test="changeType!=null">
				AND dbwd.change_type = #{changeType}
			</if>
			<if test="addBonus!=null and addBonus==1">
				AND dbwd.change_type IN (1,3)
			</if>
			<if test="name!=null and name!=''">
				AND (dc.name LIKE CONCAT('%',#{name},'%') OR dc.nick_name LIKE CONCAT('%',#{name},'%'))
			</if>
			<if test="serialNumber!=null and serialNumber!=''">
				AND dcg.serial_number LIKE CONCAT('%',#{serialNumber},'%')
			</if>
			<if test="phone!=null and phone!=''">
				AND dc.phone LIKE CONCAT('%',#{phone},'%')
			</if>
			<if test="startDate!=null and startDate!=''">
				AND dbwd.create_date &gt;= CONCAT(#{startDate},' 00:00:00')
			</if>
			<if test="endDate!=null and endDate!=''">
				AND dbwd.create_date &lt;= CONCAT(#{endDate},' 23:59:59')
			</if>
			<if test="openId!=null and openId!=''">
				AND dc.open_id = #{openId}
			</if>
			<if test="batchId!=null and batchId!=''">
				AND dbwd.batch_id = #{batchId}
			</if>
		GROUP BY dbwd.batch_id, dbwd.change_type
		ORDER BY dbwd.id DESC
		<if test="rows != null and  rows > 0">
			LIMIT #{start}, #{rows}
		</if>
	</select>

	<select id="selectSearchListCount4Detail" parameterType="Map" resultType="Integer">
		SELECT
			COUNT(*)
		FROM d_bonus_wallet_detail dbwd
		LEFT JOIN d_bonus_wallet dbw ON dbwd.bonus_wallet_id = dbw.id
		LEFT JOIN d_customer_group dcg ON dcg.bonus_wallet_id = dbw.id
		LEFT JOIN d_customer dc ON dc.id = dcg.customer_id
		LEFT JOIN d_group dg ON dg.id = dcg.group_id
		WHERE
			1=1
			<if test="changeType!=null">
				AND dbwd.change_type = #{changeType}
			</if>
			<if test="addBonus!=null and addBonus==1">
				AND dbwd.change_type IN (1,3)
			</if>
			<if test="groupId!=null">
				AND dcg.group_id = #{groupId}
			</if>
			<if test="name!=null and name!=''">
				AND (dc.name LIKE CONCAT('%',#{name},'%') OR dc.nick_name LIKE CONCAT('%',#{name},'%'))
			</if>
			<if test="serialNumber!=null and serialNumber!=''">
				AND dcg.serial_number LIKE CONCAT('%',#{serialNumber},'%')
			</if>
			<if test="phone!=null and phone!=''">
				AND dc.phone LIKE CONCAT('%',#{phone},'%')
			</if>
			<if test="startDate!=null and startDate!=''">
				AND dbwd.create_date &gt;= CONCAT(#{startDate},' 00:00:00')
			</if>
			<if test="endDate!=null and endDate!=''">
				AND dbwd.create_date &lt;= CONCAT(#{endDate},' 23:59:59')
			</if>
			<if test="openId!=null and openId!=''">
				AND dc.open_id = #{openId}
			</if>
			<if test="batchId!=null and batchId!=''">
				AND dbwd.batch_id = #{batchId}
			</if>
	</select>

	<select id="findById" parameterType="String" resultType="BonusWallet">
		SELECT 
			id,
			sum_bonus AS sumBonus,
			distribute_bonus AS distributeBonus,
			used_bonus AS usedBonus,
			available_bonus AS availableBonus
		FROM <include refid="tableName"/>
		WHERE id = #{id}
	</select>

	<insert id="add" parameterType="BonusWallet" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO <include refid="tableName"/>
		(
			sum_bonus,
			distribute_bonus,
			used_bonus,
			available_bonus,
			create_date,
			creator,
			create_ip
		)
		VALUES 
		(
			#{sumBonus},
			#{distributeBonus},
			#{usedBonus},
			#{availableBonus},
			NOW(),
		  	#{creator},
		  	#{createIp}
		)
	</insert>

	<update id="edit" parameterType="BonusWallet">
		UPDATE <include refid="tableName"/>
		SET
			update_date = NOW()
			,updater = #{updater}
			,update_ip = #{updateIp}
			<if test="sumBonus != null">
				,sum_bonus = #{sumBonus}
			</if>
			<if test="distributeBonus != null">
				,distribute_bonus = #{distributeBonus}
			</if>
			<if test="usedBonus != null">
				,used_bonus = #{usedBonus}
			</if>
			<if test="availableBonus != null">
				,available_bonus = #{availableBonus}
			</if>
			<if test="lastDistributionDate != null and lastDistributionDate!=''">
				,last_distribution_date = #{lastDistributionDate}
			</if>
		WHERE id = #{id}
	</update>

	<insert id="addDetail" parameterType="BonusWalletDetail">
		INSERT INTO d_bonus_wallet_detail
		(
			batch_id,
			bonus_wallet_id,
			bonus_change,
			change_type,
			bef_sum_bonus,
			bef_distribute_bonus,
			bef_available_bonus,
			bef_used_bonus,
			aft_sum_bonus,
			aft_distribute_bonus,
			aft_available_bonus,
			aft_used_bonus,
			order_pay_item_id,
			src_customer_money_pay,
			src_customer_money_available,
			bonus_rate,
			create_date,
			creator,
			create_ip
		)
		VALUES
		(
			#{batchId},
			#{bonusWalletId},
			#{bonusChange},
			#{changeType},
			#{befSumBonus},
			#{befDistributeBonus},
			#{befAvailableBonus},
			#{befUsedBonus},
			#{aftSumBonus},
			#{aftDistributeBonus},
			#{aftAvailableBonus},
			#{aftUsedBonus},
			#{orderPayItemId},
			#{srcCustomerMoneyPay},
			#{srcCustomerMoneyAvailable},
			#{bonusRate},
			NOW(),
			#{creator},
			#{createIp}
		)
	</insert>

</mapper>